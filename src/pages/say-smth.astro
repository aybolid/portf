---
export const prerender = false;

import Layout from "../layout.astro";
import { Comment, db, desc, eq } from "astro:db";
import { cn } from "../utils/cn";
import FormattedDate from "../components/FormattedDate.astro";
import HomeLink from "../components/HomeLink.astro";

const comments = await db
  .select()
  .from(Comment)
  .where(eq(Comment.published, true))
  .orderBy(desc(Comment.createdAt))
  .all();

let error = "";
let pendingComment = null;
if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const author = data.get("author")?.toString().trim();
    const content = data.get("content")?.toString().trim();

    if (!author || !content) {
      error = "comment validation failed on server";
      return;
    }

    const created = await db
      .insert(Comment)
      .values({
        author,
        content,
      })
      .returning();

    pendingComment = created[0];
  } catch (e) {
    if (e instanceof Error) {
      error = e.message;
    } else error = "something went wrong";

    console.error(e);
  }
}
---

<Layout title="say smth">
  <HomeLink />
  <h1 class="text-2xl">Comments</h1>

  {
    !pendingComment && (
      <form class="grid gap-2 mt-6" method="POST">
        <label for="author">Name</label>
        <input
          placeholder="John Doe"
          type
          type="text"
          name="author"
          id="author"
          class="bg-background border rounded-md h-8 px-2 focus:border-accent focus:outline-none placeholder:text-muted-foreground/70"
          required
          minlength="2"
          maxlength="15"
        />
        <label for="content">Comment</label>
        <textarea
          placeholder="Hey! This is a comment. How cool is that?"
          required
          minlength="8"
          maxlength="200"
          name="content"
          id="content"
          class="bg-background border rounded-md h-24 min-h-8 py-1 px-2 resize-y max-h-32 focus:border-accent focus:outline-none placeholder:text-muted-foreground/70"
        />
        {error && <p class="text-destructive">{error}</p>}
        <div class="flex justify-end items-center mt-4">
          <button class="bg-accent rounded-md px-2 text-white hover:bg-accent/90">
            send a comment
          </button>
        </div>
      </form>
    )
  }

  <section class="grid gap-5 mt-6">
    {
      pendingComment && (
        <div class={cn("rounded-md border overflow-hidden border-warn")}>
          <div class="p-4 opacity-50">
            <h3 class="text-lg font-semibold">
              {pendingComment.author}{" "}
              <span class="text-muted-foreground text-xs">
                on <FormattedDate date={pendingComment.createdAt} />
              </span>
            </h3>
            <p class="mt-1">{pendingComment.content}</p>
          </div>
          <p
            class={cn(
              "bg-muted/80 px-4 py-2 border-t border-warn text-sm text-center text-warn",
            )}
          >
            Thanks! This is a preview of your comment. It will be published as
            soon as I approve it. Safety first! üë∑‚Äç‚ôÇÔ∏è
          </p>
        </div>
      )
    }
    {
      comments.map(({ author, content, highlight, response, createdAt }) => (
        <div
          class={cn(
            "rounded-md border overflow-hidden",
            highlight &&
              "border-accent bg-gradient-to-r from-accent/20 to-transparent via-transparent",
          )}
        >
          <div class="p-4">
            <h3 class="text-lg font-semibold">
              {author}{" "}
              <span class="text-muted-foreground text-xs">
                on <FormattedDate date={createdAt} />
              </span>
            </h3>
            <p class="mt-1">{content}</p>
          </div>
          {response && (
            <p
              class={cn(
                "bg-muted/80 px-4 py-2 border-t text-sm flex justify-end",
                highlight && "border-accent",
              )}
            >
              {response}
            </p>
          )}
        </div>
      ))
    }
  </section>
</Layout>
